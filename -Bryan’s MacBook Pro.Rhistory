cluster_db = clusters %>%
left_join(cluster_summ) %>%
mutate(html = paste0("<b>Cluster ID: </b>",`Cluster ID`,"</br>",
"<b>Priority: </b>",PRIORITY,"</br>",
"<b>Project Status",`Project Status`,"</br>",
"<b>Number of Barriers Resolved: </b>",n))
cluster_geo@data = data.frame(cluster_geo@data %>% left_join(cluster_db %>% rename(id=`Cluster ID`)))
barrier_pts$spot_id=NA
barrier_pts$spot_id[barrier_pts$category=="Spot Improvement"]=
1:nrow(barrier_pts[barrier_pts$category=="Spot Improvement",])
barrier_lines$spot_id=NA
barrier_lines$spot_id[barrier_lines$category=="Spot Improvement"]=
1:nrow(barrier_lines[barrier_lines$category=="Spot Improvement",])
barrier_lines = barrier_lines %>% mutate(html = paste0("<b>Linear Barrier ID: </b>",id,"</br>",
"<b>Category: </b>",barrier_type,"</br>",
"<b>Severity Level (1=Low,3=High): </b>",sev_lev,"</br>",
"<b>",ifelse(category=="Included in Multimodal Project","Project ID: ",
ifelse(category=="Included in Cluster Project","Cluster ID: ",
"Spot ID: ")),"</b>",
ifelse(category=="Included in Multimodal Project",as.character(project_id),
ifelse(category=="Included in Cluster Project",as.character(cluster_id),
as.character(spot_id))),"</br>"))
barrier_line_sp@data = data.frame(barrier_lines)
barrier_pts[,c("lng","lat")]=barrier_pt_sp@coords
barrier_pts = barrier_pts %>% arrange(id) %>%
mutate(html = paste0("<b>Barrier ID: </b>",id,"</br>",
"<b>Barrier Category: </b>",long_name,"</br>",
"<b>Severity Level (1=Low,3=High): </b>",sev_lev,"</br>",
"<b>Project Type: </b>",category,"</br>",
"<b>",ifelse(category=="Included in Multimodal Project","Project ID: ",
ifelse(category=="Included in Cluster Project","Cluster ID: ",
"Spot ID: ")),"</b>",
ifelse(category=="Included in Multimodal Project",as.character(project_id),
ifelse(category=="Included in Cluster Project",as.character(cluster_id),
as.character(spot_id))),"</br>",
sprintf('<a href="http://maps.google.com/maps?q=%f,%f&ll=%f,%f&z=18&t=k" target="_blank">%s</a>',
lat,lng,lat,lng,"Google Map")))
barrier_pt_sp@data=data.frame(barrier_pts)
iconList = list()
project_pal = colorFactor(
palette = c("blue","red"),
levels = factor(c("Very Low","Low","Medium","High","Very High"),ordered=TRUE,
levels = c("Very Low","Low","Medium","High","Very High")),
ordered = TRUE
)
selection = c("Programmed","Complete")
sub_pids = projects$`Project ID`[projects$`Project Status` %in% selection]
sub_cids = clusters$`Cluster ID`[clusters$`Project Status` %in% selection]
sub_sids = spots$spot_id[spots$`Project Status` %in% selection]
sub_ccids = concepts$cc_id[concepts$Project.Status %in% selection]
sub_barrier_line_sp = barrier_line_sp[
barrier_line_sp$project_id %in% sub_pids |
barrier_line_sp$spot_id %in% sub_sids |
barrier_line_sp$cc_id %in% sub_cids,
]
sub_barrier_pt_sp = barrier_pt_sp[
barrier_pt_sp$project_id %in% sub_pids |
barrier_pt_sp$cluster_id %in% sub_cids |
barrier_pt_sp$spot_id %in% sub_sids |
barrier_pt_sp$cc_id %in% sub_ccids,
]
leafIcons= icons(
iconUrl = sub_barrier_pt_sp$image_link,
iconWidth = 25,
iconHeight=25
)
sub_concepts = concepts[concepts$cc_id %in% sub_ccids,]
sub_clusters = cluster_geo[cluster_geo$id %in% sub_cids,]
sub_projects = mm_projects[mm_projects$Project_ID %in% sub_pids,]
leafletProxy("map") %>% clearShapes() %>% clearMarkers() %>%
addPolygons(data =sub_concepts,
color="dark grey",group = "Catalytic Concepts", popup =~html,fillOpacity = 0.5,
label =~`Catalytic.Concept`) %>%
addPolygons(data =sub_clusters,
fillColor = ~project_pal(PRIORITY),color=~project_pal(PRIORITY),
group = "Cluster Projects", popup =~html,fillOpacity = 0.6,
label = ~paste0("Cluster ",id)) %>%
addPolygons(data = sub_projects,
group = "Multimodal Projects",popup=~html,fillOpacity = 0.6,
fillColor = ~project_pal(PRIORITY),color=~project_pal(PRIORITY),
label =~`Project.Name`) %>%
addPolylines(data = sub_barrier_line_sp,
color="black",group = "Linear Barriers",popup =~html)%>%
addMarkers(data=sub_barrier_pt_sp,
icon =leafIcons,popup=~html,group=~long_name)
leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>%
addLayersControl(overlayGroups = c(icon_ref$long_name,"Catalytic Concepts","Multimodal Projects",
"Cluster Projects","Linear Barriers"),
options = layersControlOptions(collapsed = FALSE)) %>%
addLegend(position = "bottomright",title="Project Priority",pal=project_pal,
values = factor(c("Very Low","Low","Medium","High","Very High"),ordered=TRUE,
levels = c("Very Low","Low","Medium","High","Very High"))) %>%
hideGroup(c(icon_ref$long_name,"Catalytic Concepts","Linear Barriers")) %>%
setView(lng = -157.8195992,lat = 21.2970109,zoom =16) %>% clearShapes() %>% clearMarkers() %>%
addPolygons(data =sub_concepts,
color="dark grey",group = "Catalytic Concepts", popup =~html,fillOpacity = 0.5,
label =~`Catalytic.Concept`) %>%
addPolygons(data =sub_clusters,
fillColor = ~project_pal(PRIORITY),color=~project_pal(PRIORITY),
group = "Cluster Projects", popup =~html,fillOpacity = 0.6,
label = ~paste0("Cluster ",id)) %>%
addPolygons(data = sub_projects,
group = "Multimodal Projects",popup=~html,fillOpacity = 0.6,
fillColor = ~project_pal(PRIORITY),color=~project_pal(PRIORITY),
label =~`Project.Name`) %>%
addPolylines(data = sub_barrier_line_sp,
color="black",group = "Linear Barriers",popup =~html)%>%
addMarkers(data=sub_barrier_pt_sp,
icon =leafIcons,popup=~html,group=~long_name)
runApp()
runApp()
require(transportr)
require(dplyr)
require(tidyr)
require(XLConnect)
require(readr)
require(readxl)
require(sp)
require(ggmap)
require(ggrepel)
require(lubridate)
require(extrafont)
require(rgeos)
require(scales)
require(rgdal)
require(leaflet)
require(rvest)
require(tigris)
require(acs)
require(htmltools)
setwd("/Users/bblanc/OneDrive/_Nelson-Nygaard/Hood\ River\ TMP")
pop_data = read_excel("population_forecast.xlsx")
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area = "Wasco County")
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County")
View(pf)
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(5))+
theme(text = element_text(family ="Arial Narrow",size=15))
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15))
pop_data = read_excel("population_forecast.xlsx")
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County")
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15))
pop_data = read_excel("population_forecast.xlsx")
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County")
View(pf)
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated \nPopulation")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15))
pop_data = read_excel("population_forecast.xlsx")
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County") %>%
mutate(Area = ifelse(Area=="Outside UGB Area (Hood River County)",wrap_sentance(Area,20),Area))
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15))
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County") %>%
mutate(Area = ifelse(Area=="Outside UGB Area (Hood River County)",wrap_sentance(Area,15),Area))
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15))
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15),legend.position = "Bottom")
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15),
legend.position = "bottom")
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County") %>%
filter(Area !="Outside UGB Area (Hood River County)")
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15),
legend.position = "bottom")
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County") %>%
filter(Area !="Outside UGB Area (Hood River County)")
View(pf)
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County") %>%
filter(Area !="Outside UGB Area (Hood River County)")
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15),
legend.position = "bottom")
pop_data = read_excel("population_forecast.xlsx")
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County") %>%
filter(Area !="Outside UGB Area (Hood River County)")
unique(pf$Area)
pf = pop_data %>% gather(year,value,-County,-Area,-Source) %>%
filter(!is.na(value)) %>% filter(Source=="PSU") %>%
filter(County=="Hood River"| Area =="The Dalles UGB"| Area == "Wasco County") %>%
filter(Area !="Outside  UGB Area (Hood River County)")
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=15),
legend.position = "bottom")
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=20),
legend.position = "bottom")
ggplot(pf,aes(x=year,y=value,color = Area,group=Area))+geom_point()+
geom_line(lty=4)+
scale_y_continuous(labels=comma)+ylab("Estimated Population")+
xlab("Year")+scale_color_manual(values = color_palette(6))+
theme(text = element_text(family ="Arial Narrow",size=18),
legend.position = "bottom")
xwalk = lodes_crosswalk("OR")
hood = xwalk %>% filter(grepl("Hood River",ctyname))
wac = lodes_fetch("OR","WAC",2014)
wac_hood = wac %>% filter(w_geocode %in% hood$tabblk2010)
joined = hood %>% rename(w_geocode =tabblk2010) %>%
mutate(w_geocode=as.character(w_geocode)) %>%
left_join(wac  %>% mutate(w_geocode=as.character(w_geocode)),by="w_geocode") %>%
filter(!is.na(C000))
wac_meta = read_excel("lodes_reference.xlsx")
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
agg = lodes_agg(wac_hood,"WAC","place",xwalk) %>%
gather(metric,value,-w_stplc,-w_stplcname,-type,-seg) %>%
left_join(wac_meta %>% rename(metric=`Variable `) %>%
mutate(metric = trim(metric)))
sector = agg %>% filter(grepl("NAIC",`Explanation `) |
grepl("Total number of",`Explanation `)) %>%
filter(seg=="S000",type=="JT00") %>%
group_by(w_stplc,w_stplcname,`Explanation `) %>%
summarise(total = sum(value))
pf = sector %>% filter(!grepl("Total",`Explanation `))
pf$sec=NA
for(i in 1:nrow(pf)){
pf$sec[i] = gsub(")","",strsplit(pf$`Explanation `[i],"(",fixed=TRUE)[[1]][2])
}
pf$sec = wrap_sentance(pf$sec,50)
totals = pf %>% group_by(sec) %>% summarise(n = sum(total))
pf = pf %>% mutate(sec = factor(sec,ordered=TRUE,levels =
totals$sec[order(totals$n)]))
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=18),
legend.position = "bottom")
unloadNamespace("acs")
unloadNamespace("plyr")
joined = hood %>% rename(w_geocode =tabblk2010) %>%
mutate(w_geocode=as.character(w_geocode)) %>%
left_join(wac  %>% mutate(w_geocode=as.character(w_geocode)),by="w_geocode") %>%
filter(!is.na(C000))
wac_meta = read_excel("lodes_reference.xlsx")
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
agg = lodes_agg(wac_hood,"WAC","place",xwalk) %>%
gather(metric,value,-w_stplc,-w_stplcname,-type,-seg) %>%
left_join(wac_meta %>% rename(metric=`Variable `) %>%
mutate(metric = trim(metric)))
sector = agg %>% filter(grepl("NAIC",`Explanation `) |
grepl("Total number of",`Explanation `)) %>%
filter(seg=="S000",type=="JT00") %>%
group_by(w_stplc,w_stplcname,`Explanation `) %>%
summarise(total = sum(value))
pf = sector %>% filter(!grepl("Total",`Explanation `))
pf$sec=NA
for(i in 1:nrow(pf)){
pf$sec[i] = gsub(")","",strsplit(pf$`Explanation `[i],"(",fixed=TRUE)[[1]][2])
}
pf$sec = wrap_sentance(pf$sec,50)
totals = pf %>% group_by(sec) %>% summarise(n = sum(total))
pf = pf %>% mutate(sec = factor(sec,ordered=TRUE,levels =
totals$sec[order(totals$n)]))
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=18),
legend.position = "bottom")
pf = sector %>% filter(!grepl("Total",`Explanation `))
pf$sec=NA
for(i in 1:nrow(pf)){
pf$sec[i] = gsub(")","",strsplit(pf$`Explanation `[i],"(",fixed=TRUE)[[1]][2])
}
pf$sec = wrap_sentance(pf$sec,40)
totals = pf %>% group_by(sec) %>% summarise(n = sum(total))
pf = pf %>% mutate(sec = factor(sec,ordered=TRUE,levels =
totals$sec[order(totals$n)]))
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=18),
legend.position = "bottom")
png("jobs_by_sector.png",height=2000,width=1000)
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=18),
legend.position = "bottom")
dev.off()
png("jobs_by_sector.png",height=1500,width=1000)
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=18),
legend.position = "bottom")
dev.off()
png("jobs_by_sector.png",height=1200,width=1000)
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=18),
legend.position = "bottom")
dev.off()
png("jobs_by_sector.png",height=1000,width=1000)
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=20),
legend.position = "bottom")
dev.off()
png("jobs_by_sector.png",height=900,width=1000)
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=20),
legend.position = "bottom")
dev.off()
png("jobs_by_sector.png",height=900,width=1000)
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=20),
legend.position = "bottom")+scale_x_continuous(labels=comma)
dev.off()
png("jobs_by_sector.png",height=900,width=1000)
ggplot(pf,aes(x=sec,y=total,fill=w_stplcname))+geom_bar(stat="identity")+
coord_flip()+scale_fill_manual(values = color_palette(6),"Area")+
ylab("Number of Jobs")+xlab("Sector")+
theme(text = element_text(family ="Arial Narrow",size=20),
legend.position = "bottom")+scale_y_continuous(labels=comma)
dev.off()
sum(pf$total)
od = lodes_fetch("OR","OD",2014)
od = lodes_fetch("OR","OD",2014)
View(od)
od_hood = od %>% filter(w_geocode %in% hood$tabblk2010)
View(od_hood)
od_hood = od %>% filter(w_geocode %in% hood$tabblk2010) %>%
left_join(xwalk %>% select(tabblk2010,cty,ctyname) %>%
rename(w_geocode = tabblk2010,w_cty=cty,w_ctyname=ctyname)) %>%
left_join(xwalk %>% select(tabblk2010,cty,ctyname) %>%
rename(h_geocode = tabblk2010,h_cty=cty,h_ctyname=ctyname))
str(xwalk)
str(od_hood)
od_hood = od %>% filter(w_geocode %in% hood$tabblk2010) %>%
left_join(xwalk %>% select(tabblk2010,cty,ctyname) %>%
rename(w_geocode = tabblk2010,w_cty=cty,w_ctyname=ctyname) %>%
mutate(w_geocode = as.character(w_geocode))) %>%
left_join(xwalk %>% select(tabblk2010,cty,ctyname) %>%
rename(h_geocode = tabblk2010,h_cty=cty,h_ctyname=ctyname) %>%
mutate(h_geocode = as.character(h_geocode)))
View(od_hood)
summ_county = od_hood %>% filter(seg=="S000",type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(C000))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(C000))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000))
View(summ_county)
or_xwalk = lodes_crosswalk("OR")
wa_xwalk = lodes_crosswalk("WA")
xwalk = bind_rows(or_xwalk,wa_xwalk)
od_hood = od %>% filter(w_geocode %in% hood$tabblk2010) %>%
left_join(xwalk %>% select(tabblk2010,cty,ctyname) %>%
rename(w_geocode = tabblk2010,w_cty=cty,w_ctyname=ctyname) %>%
mutate(w_geocode = as.character(w_geocode))) %>%
left_join(xwalk %>% select(tabblk2010,cty,ctyname) %>%
rename(h_geocode = tabblk2010,h_cty=cty,h_ctyname=ctyname) %>%
mutate(h_geocode = as.character(h_geocode)))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(" WA",h_ctyname),"Other WA Counties",origin_group),
origin_group = ifelse(job_flow<100 & grepl(" OR",h_ctyname),"Other OR Counties",origin_group),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR)",origin_group)) %>%
group_by(w_ctyname,origin_group) %>% summarise(job_flow=sum(job_flow))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(" WA",h_ctyname),"Other WA Counties",origin_group),
origin_group = ifelse(job_flow<100 & grepl(" OR",h_ctyname),"Other OR Counties",origin_group),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR)",origin_group))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(" WA",h_ctyname),"Other WA Counties",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(" OR",h_ctyname),"Other OR Counties",h_ctyname),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR)",h_ctyname)) %>%
group_by(w_ctyname,origin_group) %>% summarise(job_flow=sum(job_flow))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(" WA",h_ctyname),"Other WA Counties",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(" OR",h_ctyname),"Other OR Counties",h_ctyname),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR)",h_ctyname))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(", WA",h_ctyname,fixed=TRUE),"Other WA Counties",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(", OR",h_ctyname,fixed=TRUE),"Other OR Counties",h_ctyname),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR)",h_ctyname))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(", WA",h_ctyname,fixed=TRUE),
"Other WA Counties",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(", OR",h_ctyname,fixed=TRUE),
"Other OR Counties",h_ctyname),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR)",h_ctyname)) %>%
group_by(w_ctyname,origin_group) %>% summarise(job_flow=sum(job_flow))
str(od_hood)
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000))
str(summ_county)
grepl(", WA",od_hood$h_ctyname,fixed=TRUE)
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(", WA",h_ctyname,fixed=TRUE),
"Other WA Counties",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(", OR",h_ctyname,fixed=TRUE),
"Other OR Counties",origin_group),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR)",origin_group)) %>%
group_by(w_ctyname,origin_group) %>% summarise(job_flow=sum(job_flow))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(", WA",h_ctyname,fixed=TRUE),
"Other WA Counties with flows <100)",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(", OR",h_ctyname,fixed=TRUE),
"Other OR Counties with flows <100)",origin_group),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR) with flows <100",origin_group)) %>%
group_by(w_ctyname,origin_group) %>% summarise(job_flow=sum(job_flow))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(", WA",h_ctyname,fixed=TRUE),
"Other WA Counties with flows <100",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(", OR",h_ctyname,fixed=TRUE),
"Other OR Counties with flows <100",origin_group),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR) with flows <100",origin_group)) %>%
group_by(w_ctyname,origin_group) %>% summarise(job_flow=sum(job_flow))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(", WA",h_ctyname,fixed=TRUE),
"Other WA Counties with flows <100",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(", OR",h_ctyname,fixed=TRUE),
"Other OR Counties with flows <100",origin_group),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR) with flows <100",origin_group)) %>%
group_by(w_ctyname,origin_group) %>% summarise(job_flow=sum(job_flow)) %>%
mutate(prop = mutate(job_flow/sum(job_flow)))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(", WA",h_ctyname,fixed=TRUE),
"Other WA Counties with flows <100",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(", OR",h_ctyname,fixed=TRUE),
"Other OR Counties with flows <100",origin_group),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR) with flows <100",origin_group)) %>%
group_by(w_ctyname,origin_group) %>% summarise(job_flow=sum(job_flow)) %>%
ungroup() %>%
mutate(prop = mutate(job_flow/sum(job_flow)))
summ_county = od_hood %>% filter(type=="JT00") %>%
group_by(w_ctyname,h_ctyname) %>% summarise(job_flow = sum(S000)) %>%
mutate(origin_group = ifelse(job_flow<100 & grepl(", WA",h_ctyname,fixed=TRUE),
"Other WA Counties with flows <100",h_ctyname),
origin_group = ifelse(job_flow<100 & grepl(", OR",h_ctyname,fixed=TRUE),
"Other OR Counties with flows <100",origin_group),
origin_group = ifelse(is.na(h_ctyname),"Other Counties (not WA or OR) with flows <100",origin_group)) %>%
group_by(w_ctyname,origin_group) %>% summarise(job_flow=sum(job_flow)) %>%
ungroup() %>%
mutate(prop = job_flow/sum(job_flow))
write_csv(summ_county,"job_flow.csv")
